<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="WeChatOrderMapper">
	<!--  -->
	<resultMap type="WeChatOrder" id="WeChatOrderMapResult">
		<id property="orderId" column="orderId"/>
		<result property="uId" column="uId"/>
		<result property="createTime" column="createTime"/>
		<result property="orderStatus" column="orderStatus"/>
		<result property="recommendTime" column="recommendTime"/>
		<result property="expireTime" column="expireTime"/>
		<result property="remark" column="remark"/>
		<result property="orderMoney" column="orderMoney"/>
		<result property="payMoney" column="payMoney"/>
		<result property="proportion" column="proportion"/>
		<result property="discountId" column="discountId"/>
		<result property="serviceStaffId" column="serviceStaffId"/>
		<association property="store" javaType="WeChatStore">
			<id property="storeId" column="storeId"/>
			<result property="storeName" column="storeName"/>
			<result property="storeSmallImg" column="storeSmallImg"/>
		</association>
		<association property="staff" javaType="WeChatStaff">
			<id property="staffId" column="staffId"/>
			<result property="staffName" column="staffName"/>
		</association>
		<association property="serviceProject" javaType="WeChatServiceProject">
			<id property="projectId" column="projectId"/>
			<result property="pName" column="pName"/>
		</association>
		<association property="appoint" javaType="WeChatAppoint">
			<id property="customAppointId" column="customAppointId"/>
			<result property="appointTime" column="appointTime"/>
			<result property="appointCode" column="appointCode"/>
			<result property="expireTime" column="expireTime"/>
		</association>
		<association property="serviceCost" javaType="WeChatServiceCost">
			<id property="serviceCostId" column="serviceCostId"/>
			<result property="isFirst" column="isFirst"/>
		</association>
		<collection property="payDetails" ofType="WeChatPayDetail">
			<id property="payDetailId" column="payDetailId"/>
			<result property="payMoney" column="payMoney"/>
			<result property="payTime" column="payTime"/>
			<result property="payMethod" column="payMethod"/>
		</collection>
	</resultMap>
	
	<!-- 根据用户编号(主键)查询某用户的所有订单信息 -->
	<select id="getUserOrdersByUserId" parameterType="java.lang.Integer" resultType="pd">
	<!-- 提交之间将SQL语句与数据库表对应起来 -->
		select
			store.STORE_ID as storeId,store.STORE_NAME as storeName,store.STORE_SMALL_IMG as storeSmallImg,
			service.PNAME as projectName,
			staff.STAFF_NAME as staffName,
			appoint.appoint_time as appointTime,appoint.apiont_code as appointCode,
			orders.ORDER_ID as orderId,orders.CREATE_TIME as createTime,orders.EXPIRE_TIME as expireTime,orders.ORDER_MONEY orderMoney,orders.ORDER_STATUS as orderStatus
		from
		TB_ORDER orders,
		TAB_CUSTOM_APPOINT appoint,
		TB_STAFF staff,
		TAB_PAY_DETAIL detail,
		TB_STORE store ,
		SERVICE_PROJECT service
		where
			orders.STORE_ID = store.STORE_ID and
			orders.ORDER_ID = appoint.order_id and 
			orders.PROJECT_ID = service.PROJECT_ID and
			orders.SERVICE_STAFF_ID = staff.staff_id and
			detail.order_id = orders.order_id and
			orders.uid = #{uId}
	</select>
	
	<!-- 根据用户编号(主键)查询未支付订单与已关闭订单 -->
	<!-- 由于需要,查询的订单不包括已关闭的订单 -->
	<select id="getUserPrePayOrCloseOrderByUserId" parameterType="java.lang.Integer" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.UID as uId,
			orders.ORDER_MONEY as orderMoney,
			orders.PAY_MONEY as payMoney,
			orders.CREATE_TIME as createTime,
			orders.ORDER_STATUS as orderStatus,
			orders.RECOMMEND_TIME as recommendTime,
			orders.EXPIRE_TIME as expireTime,
			orders.PROPORTION as proportion,
			orders.REMARK as remark,
			store.STORE_ID as storeId,
			store.STORE_NAME as storeName,
			staff.STAFF_ID as staffId,
			staff.STAFF_NAME as staffName,
			serviceProject.PROJECT_ID as projectId,
			serviceProject.PNAME as pName
		from 
			TB_ORDER orders,
			TB_STORE store,
			TB_STAFF staff,
			SERVICE_COST serviceCost,
			SERVICE_PROJECT serviceProject
		where
			orders.STORE_ID = store.STORE_ID
			and
			orders.SERVICECOST_ID = serviceCost.SERVICECOST_ID
			and
			serviceCost.PID = serviceProject.PROJECT_ID
			and
			orders.STAFF_ID = staff.STAFF_ID
			and
			orders.uid = #{uId}
			and
			orders.ORDER_STATUS = 0
			order by orders.CREATE_TIME desc
	</select>
	
	<!-- 根据用户编号(主键)查询已预约订单与已过期订单 -->
	<select id="getUserAppointOrOvertimeOrderByUserId" parameterType="java.lang.Integer" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.UID as uId,
			orders.ORDER_MONEY as orderMoney,
			orders.PAY_MONEY as payMoney,
			orders.CREATE_TIME as createTime,
			orders.ORDER_STATUS as orderStatus,
			orders.REMARK as remark,
			store.STORE_ID as storeId,
			store.STORE_NAME as storeName,
			staff.STAFF_ID as staffId,
			staff.STAFF_NAME as staffName,
			serviceProject.PROJECT_ID as projectId,
			serviceProject.PNAME as pName,
			appoint.CUSTOMAPPOINT_ID as customAppointId,
			appoint.APPOINT_CODE as appointCode,
			appoint.EXPIRE_TIME as expireTime,
			appoint.APPOINT_TIME as appointTime
		from 
			TB_ORDER orders,
			TB_STORE store,
			TB_STAFF staff,
			SERVICE_COST serviceCost,
			SERVICE_PROJECT serviceProject,
			TB_CUSTOM_APPOINT appoint
		where
			orders.STORE_ID = store.STORE_ID
			and
			orders.SERVICECOST_ID = serviceCost.SERVICECOST_ID
			and
			serviceCost.PID = serviceProject.PROJECT_ID
			and
			orders.STAFF_ID = staff.STAFF_ID
			and
			orders.ORDER_ID = appoint.ORDER_ID
			and
			orders.uid = #{uId}
			and
			orders.ORDER_STATUS in (2,3)
			order by orders.CREATE_TIME desc
	</select>
	
	<!-- 根据用户编号(主键)查询待评价订单,已完成订单,已取消订单 -->
	<select id="getUserPreCommentOrDoneOrderByUserId" parameterType="java.lang.Integer" resultMap="WeChatOrderMapResult">	
		select 
			orders.ORDER_ID as orderId,
			orders.UID as uId,
			orders.CREATE_TIME as createTime,
			orders.ORDER_MONEY as orderMoney,
			orders.PAY_MONEY as payMoney,
			orders.ORDER_STATUS as orderStatus,
			store.STORE_ID as storeId,
			store.STORE_NAME as storeName,
			staff.STAFF_ID as staffId,
			staff.STAFF_NAME as staffName,
			serviceProject.PROJECT_ID as projectId,
			serviceProject.PNAME as pName,
			appoint.CUSTOMAPPOINT_ID as customAppointId,
			appoint.APPOINT_CODE as appointCode,
			appoint.APPOINT_TIME as appointTime
		from 
			TB_ORDER orders,
			TB_STORE store,
			TB_STAFF staff,
			SERVICE_COST serviceCost,
			SERVICE_PROJECT serviceProject,
			TB_CUSTOM_APPOINT appoint
		where
			orders.STORE_ID = store.STORE_ID
			and
			orders.SERVICECOST_ID = serviceCost.SERVICECOST_ID
			and
			orders.STAFF_ID = staff.STAFF_ID
			and
			orders.ORDER_ID = appoint.ORDER_ID
			and
			serviceCost.PID = serviceProject.PROJECT_ID
			and
			orders.uid = #{uId}
			and
			orders.ORDER_STATUS in (4,5,6)
			and
			orders.ORDER_ID not like 'OR%'
			order by appoint.APPOINT_TIME desc
	</select>
	
	<!-- 
		根据订单编号(主键)查询订单详情
		存在的问题
			1.返回的积分额度
			2.优惠券使用情况.用户优惠券表不应该与订单表联合查询,因为用户不一定使用优惠券
	 -->
	<select id="getUserOrderDetails" parameterType="java.lang.String" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.UID as uId,
			orders.ORDER_MONEY as orderMoney,
			orders.CREATE_TIME as createTime,
			orders.ORDER_STATUS as orderStatus,
			orders.PROPORTION as proportion,	
			orders.DISCOUNT_ID as discountId,		
			store.STORE_ID as storeId,
			store.STORE_NAME as storeName,
			store.STORE_SMALL_IMG as storeSmallImg,
			staff.STAFF_ID as staffId,
			staff.STAFF_NAME as staffName,
			serviceCost.SERVICECOST_ID as serviceCostId,
			serviceCost.ISFIRST as isFirst,
			serviceProject.PROJECT_ID as projectId,
			serviceProject.PNAME as pName,
			appoint.CUSTOMAPPOINT_ID as customAppointId,
			appoint.APPOINT_CODE as appointCode,
			appoint.APPOINT_TIME as appointTime,
			payDetail.ORDERMX_ID as payDetailId,
			payDetail.PAY_MONEY as payMoney,
			payDetail.PAY_TIME as payTime,
			payDetail.PAY_METHOD as payMethod	
		from 
			TB_ORDER orders,
			TB_STORE store,
			TB_STAFF staff,
			SERVICE_COST serviceCost,
			SERVICE_PROJECT serviceProject,
			TB_CUSTOM_APPOINT appoint,
			TB_PAY_DETAIL payDetail
		where
			orders.STORE_ID = store.STORE_ID
			and
			orders.SERVICECOST_ID = serviceCost.SERVICECOST_ID
			and
			serviceCost.PID = serviceProject.PROJECT_ID
			and
			orders.STAFF_ID = staff.STAFF_ID
			and
			orders.ORDER_ID = appoint.ORDER_ID
			and
			orders.ORDER_ID = payDetail.ORDER_ID
			and
			orders.ORDER_ID = #{orderId}
	</select>
	
	<!-- 
		根据"订单编号"查询订单基本信息,适用于订单支付
		暂时不考虑每笔订单返的积分额度
	 -->
	<select id="getOrderByOrderId" parameterType="java.lang.String" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.UID as uId,
			orders.ORDER_MONEY as orderMoney,
			orders.CREATE_TIME as createTime,
			orders.ORDER_STATUS as orderStatus,
			orders.SERVICE_STAFF_ID as serviceStaffId,
			orders.DISCOUNT_ID as discountId,
			orders.RECOMMEND_TIME as recommendTime,
			orders.EXPIRE_TIME as expireTime,
			orders.REMARK as remark,
			orders.PROPORTION as proportion,
			store.STORE_ID as storeId,
			store.STORE_NAME as storeName,
			staff.STAFF_ID as staffId,
			staff.STAFF_NAME as staffName,
			serviceCost.SERVICECOST_ID as serviceCostId,
			serviceCost.ISFIRST as isFirst,
			serviceProject.PROJECT_ID as projectId,
			serviceProject.PNAME as pName
		from 
			TB_ORDER orders,
			TB_STORE store,
			TB_STAFF staff,
			SERVICE_COST serviceCost,
			SERVICE_PROJECT serviceProject
		where
			orders.STORE_ID = store.STORE_ID
			and
			orders.SERVICECOST_ID = serviceCost.SERVICECOST_ID
			and
			serviceCost.PID = serviceProject.PROJECT_ID
			and
			orders.STAFF_ID = staff.STAFF_ID
			and
			orders.ORDER_ID = #{orderId}
	</select>
		
	<!-- 根据订单编号(主键)更新待评价订单的状态为"5",即已完成 -->
	<update id="updateUserPreCommentOrderToDone" parameterType="java.lang.String">
		update
			TB_ORDER orders
			set orders.ORDER_STATUS = '5'
		where
			orders.ORDER_ID = #{orderId}
	</update>
	
	<!-- 插入用户评价 -->
	<insert id="insertOrderCommentInfoToCustomComment" parameterType="WeChatCustomComment">
		insert into 
			TAB_CUSTOM_COMMENT(MESSAGE_ID,UID,M_ID,STORE_ID,MESSAGE_INFO,CREATETIME,ORDER_ID)
		values(#{messageId},#{uId},#{mId},#{storeId},#{messageInfo},#{createTime},#{orderId})
	</insert>
	
	<!-- 通过订单状态查询订单列表,设置一个时间参数;查询当天创建的订单状态为"0"的订单 -->
	<select id="getOrdersByOrderStatus" parameterType="java.lang.Integer" resultType="WeChatOrder">
		select 
			orders.ORDER_ID as orderId,
			orders.STORE_ID as storeId,
			orders.EXPIRE_TIME as expireTime,
			orders.ORDER_STATUS as orderStatus
		from TB_ORDER orders
		where
			orders.ORDER_STATUS = #{status}
			and
			date_format(orders.CREATE_TIME,'%Y-%c-%d') = date_format(now(),'%Y-%c-%d')
	</select>
	
	<!-- 通过订单状态查询订单列表,由于设置的过期时间为晚上24点,取消仅查询当天的订单条件 -->
	<select id="getOrdersByOrderStatusRegardlessTime" parameterType="java.lang.Integer" resultType="WeChatOrder">
		select 
			orders.ORDER_ID as orderId,
			orders.STORE_ID as storeId,
			orders.EXPIRE_TIME as expireTime,
			orders.ORDER_STATUS as orderStatus
		from TB_ORDER orders
		where
			orders.ORDER_STATUS = #{status}
	</select>
	
	<!-- 通过订单状态获取已预约的订单 -->
	<select id="getAppointedOrdersByOrderStatus" parameterType="java.lang.Integer" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.STORE_ID as storeId,
			orders.ORDER_STATUS as orderStatus,
			appoint.CUSTOMAPPOINT_ID as customAppointId,
			appoint.APPOINT_CODE as appointCode,
			appoint.APPOINT_TIME as appointTime,
			appoint.EXPIRE_TIME as expireTime
		from 
			TB_ORDER orders,
			TB_CUSTOM_APPOINT appoint
		where
			orders.ORDER_ID = appoint.ORDER_ID
			and
			orders.ORDER_STATUS = #{status}
			and
			date_format(orders.CREATE_TIME,'%Y-%c-%d') = date_format(now(),'%Y-%c-%d')
	</select>
	
	<!-- 通过订单状态获取已预约的订单,由于设置的过期时间为晚上24点,取消仅查询当天的订单条件 -->
	<select id="getAppointedOrdersByOrderStatusRegardlessTime" parameterType="java.lang.Integer" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.STORE_ID as storeId,
			orders.ORDER_STATUS as orderStatus,
			appoint.CUSTOMAPPOINT_ID as customAppointId,
			appoint.APPOINT_CODE as appointCode,
			appoint.APPOINT_TIME as appointTime,
			appoint.EXPIRE_TIME as expireTime
		from 
			TB_ORDER orders,
			TB_CUSTOM_APPOINT appoint
		where
			orders.ORDER_ID = appoint.ORDER_ID
			and
			orders.ORDER_STATUS = #{status}
	</select>
	
	<!-- 更新订单的状态为status -->
	<update id="batchUpdateOrderStatus" parameterType="WeChatOrder">
		update
			TB_ORDER orders
			set orders.ORDER_STATUS = #{orderStatus}
		where
			orders.ORDER_ID = #{orderId}
	</update>
	
	<!-- 用户支付完成后更新订单信息 -->
	<update id="updateOrderStatus" parameterType="WeChatOrder">
		update
			TB_ORDER orders
			set 
				orders.ORDER_STATUS = #{orderStatus},
				orders.PAY_MONEY = #{payMoney}
				<if test="discountId != null">
					,orders.DISCOUNT_ID = #{discountId}
				</if>
		where
			orders.ORDER_ID = #{orderId}
	</update>
	
	<!-- 查询某用户收费项目为3或者2的订单信息 -->
	<select id="getOrdersWhereServiceCostIdIn2Or3ByUid" parameterType="java.lang.Integer" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.UID as uId,
			orders.CREATE_TIME as createTime,
			orders.ORDER_MONEY as orderMoney,
			orders.PAY_MONEY as payMoney,
			orders.ORDER_STATUS as orderStatus,
			store.STORE_ID as storeId,
			store.STORE_NAME as storeName,
			staff.STAFF_ID as staffId,
			staff.STAFF_NAME as staffName		
		from 
			TB_ORDER orders,
			TB_STORE store,
			TB_STAFF staff			
		where
			orders.STORE_ID = store.STORE_ID			
			and
			orders.STAFF_ID = staff.STAFF_ID			
			and
			orders.uid = #{uId}
			and
			(orders.SERVICECOST_ID = '-2' or orders.SERVICECOST_ID = '-3')
			and
			orders.ORDER_STATUS in (4,5)
	</select>
	
	<!-- 根据订单号查询收费项目为3或者2的订单详情信息 -->
	<select id="showOrderDetailsPatch" parameterType="java.lang.String" resultMap="WeChatOrderMapResult">
		select 
			orders.ORDER_ID as orderId,
			orders.UID as uId,
			orders.ORDER_MONEY as orderMoney,
			orders.CREATE_TIME as createTime,
			orders.ORDER_STATUS as orderStatus,
			orders.PROPORTION as proportion,	
			orders.DISCOUNT_ID as discountId,
			orders.SERVICECOST_ID as serviceCostId,		
			store.STORE_ID as storeId,
			store.STORE_NAME as storeName,
			store.STORE_SMALL_IMG as storeSmallImg,
			staff.STAFF_ID as staffId,
			staff.STAFF_NAME as staffName,
			payDetail.ORDERMX_ID as payDetailId,
			payDetail.PAY_MONEY as payMoney,
			payDetail.PAY_TIME as payTime,
			payDetail.PAY_METHOD as payMethod	
		from 
			TB_ORDER orders,
			TB_STORE store,
			TB_STAFF staff,
			TB_PAY_DETAIL payDetail
		where
			orders.STORE_ID = store.STORE_ID
			and
			orders.STAFF_ID = staff.STAFF_ID
			and
			orders.ORDER_ID = payDetail.ORDER_ID
			and
			orders.ORDER_ID = #{orderId}
	</select>
</mapper>